version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - app-repo
    - init_dct
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
toolchain:
  name: 'image-signed-kube-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  app-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'githubconsolidated'
    parameters:
      repo_name: 'hello-containers-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : 'https://github.com/open-toolchain/hello-containers'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.app_repo : 'https://github.com/open-toolchain/hello-containers'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: false
      legal: true
  pipeline-repo:
    service_id: > 
      $env.pipeline_type === 'tekton' ? 'githubconsolidated' : ''
    parameters:
      repo_name: 'secure-kube-toolchain-toolchain-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : 'https://github.com/open-toolchain/image-signed-secure-kube-toolchain'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : 'https://github.com/open-toolchain/image-signed-secure-kube-toolchain'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
  tekton-catalog-repo:
    service_id: > 
      $env.pipeline_type === 'tekton' ? 'githubconsolidated' : ''
    parameters:
      repo_name: 'tekton-catalog-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : 'https://github.com/open-toolchain/tekton-catalog'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : 'https://github.com/open-toolchain/tekton-catalog'
      type: $env.type || 'link'
      has_issues: false
      enable_traceability: false
      legal: true
  build:
    service_id: pipeline
    parameters:
      services:
        - app-repo
        - pipeline-repo
        - tekton-catalog-repo
      name: '{{services.repo.parameters.repo_name}}'
      ui-pipeline: true
      type: > 
        $env.pipeline_type === 'tekton' ? 'tekton': 'classic'
      configuration:
        content:
          $text: >
            $env.pipeline_type === 'tekton' ? 'pipeline_tekton.yml' : 'pipeline.yml'
        env:
          GIT_REPO: app-repo
          PIPELINE_REPO: pipeline-repo
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          PROD_RESOURCE_GROUP: '{{form.pipeline.parameters.prod-resource-group}}'
          PROD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
          BUILD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          BUILD_RESOURCE_GROUP: '{{form.pipeline.parameters.prod-resource-group}}'
          BUILD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          BUILD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.build-cluster-namespace}}'
          VAULT_INSTANCE: '{{form.pipeline.parameters.vault_name}}'
          BUILD_SIGNER: '{{form.pipeline.parameters.build_signer}}'
          VALIDATION_SIGNER: '{{form.pipeline.parameters.validation_signer}}'
          APP_REPO_FULL: 'https://github.com/{{form.app-repo.parameters.owner_id}}/{{form.app-repo.parameters.repo_name}}'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
        execute: false
  init_dct:
    service_id: pipeline
    services:
        - pipeline-repo
        - tekton-catalog-repo
    parameters:
      name: 'dct init {{form.pipeline.parameters.registry-namespace}} {{form.pipeline.parameters.app-name}}'
      type: > 
        $env.pipeline_type === 'tekton' ? 'tekton': 'classic'
      configuration:
        content:
          $text: >
            $env.pipeline_type === 'tekton' ? 'init_dct_pipeline_tekton.yml' : 'init_dct_pipeline.yml'
        env:
          DCT_PIPELINE_REPO: pipeline-repo
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          APP_REPO: app-repo
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          BUILD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          BUILD_RESOURCE_GROUP: '{{form.pipeline.parameters.prod-resource-group}}'
          BUILD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          BUILD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.build-cluster-namespace}}'
          VAULT_INSTANCE: '{{form.pipeline.parameters.vault_name}}'
          BUILD_SIGNER: '{{form.pipeline.parameters.build_signer}}'
          VALIDATION_SIGNER: '{{form.pipeline.parameters.validation_signer}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          PROD_RESOURCE_GROUP: '{{form.pipeline.parameters.prod-resource-group}}'
          PROD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
        execute: false
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: '{{services.app-repo.parameters.repo_name}}'
      prod-cluster-namespace: default
      build-cluster-namespace: build
      vault_name: ''
      build_signer: 'devops-build'
      validation_signer: 'devops-validation'
    schema:
      $ref: deploy.json
